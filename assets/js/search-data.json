{
  
    
        "post0": {
            "title": "ベイズ勉強会 Part 2 ベルヌーイ分布のベイズ推論",
            "content": "参考図書 1 . &#27010;&#35542;: &#12505;&#12523;&#12492;&#12540;&#12452;&#20998;&#24067; . ベルヌーイ分布は次の確率質量関数で表される確率分布である。 . この確率質量関数は確率$ mu$で1、$1- mu$で0を出力する。 . . Important: ベルヌーイ分布の確率質量関数$$Bern(x| mu) = mu^x (1- mu)^{1-x}　(x in {0, 1 }, mu in (0, 1))$$ . &#21839;&#38988; . 今N個のデータ点$ mathcal{D} = {x_1, x_2, dots, x_N }　(x_1, dots, x_N in {0, 1 })$が得られたとしよう。未知のデータ点$x_*$を予測するためにベイズ推測を行いたい。 . &#12514;&#12487;&#12523;&#27083;&#31689; . $ mathcal{D}, x_*, mu$で同時分布を構築する。データ点のとりうる値が2値なので、$ mathcal{D}, x_*$が$ mu$をパラメータに持つベルヌーイ分布から生成されているとする。$ mathcal{D}, x_*, mu$の関係をDAGで描くと以下のようになる。 . . よって同時分布は . $$ p( mathcal{D}, x_*, mu) = p( mathcal{D}| mu)p(x_*| mu)p( mu) $$という尤度関数×事前分布の形で書ける。 . &#23588;&#24230;&#38306;&#25968; . データ点はベルヌーイ分布から独立に生成されるとしているので . $$ p( mathcal{D}| mu) = Pi_{n=1}^{N} Bern(x_n| mu) p(x_*| mu) = Bern(x_*| mu) $$と書ける。 . &#20107;&#21069;&#20998;&#24067; . 事前分布$p( mu)$は$ mu in (0,1)$を満たすような確率分布である必要がある。これを満たす確率分布に、ベータ分布がある。 . . Important: ベータ分布の確率密度関数 . $$Beta( mu|a, b) = C_B(a,b) mu^{a-1} (1- mu)^{b-1}$$$$ただし, C_B (a,b) = frac{ Gamma(a+b)}{ Gamma(a) Gamma(b)}, mu in (0, 1), {a, b } in mathbb{R^+}を満たす.$$ $a, b$がベータ分布のパラメータである。 . . Note: ベータ分布の係数とガンマ関数 . $C_B(a,b)$は正規化されることを保証する係数である。$C_B(a,b)$中の$ Gamma(・)$はガンマ関数である。ガンマ関数は自然数に定義される階乗を一般化したものであり、正の実数$x in mathbb{R^+}$に対して、 . $$ Gamma(x) = int t^{x-1} e^{-t} dt$$と定義される。重要な性質として . $$ begin{eqnarray} Gamma(x+1) &amp;=&amp; x Gamma(x) Gamma(1) &amp;=&amp; 1 end{eqnarray}$$を満たし、自然数nに対しては . $$ Gamma(n+1) = n!$$が成り立つ。 . ベータ分布を用いることで事前分布$p( mu)$は . $$ p( mu) = Beta( mu|a, b) $$と定義できる。$a,b$も加えてDAGを描き直すと次のように描ける。 . . 更に$a,b$を出力する確率分布を考えることもできるが、モデルを複雑化すると計算も煩雑になるのでここまでにしておく。では$a,b$の値はどうするのかというと、事前に決めておくことになる。このような変数を、パラメータのためのパラメータということで、超パラメータ(ハイパーパラメータ)と呼ぶ。 . &#12414;&#12392;&#12417; . まとめると、推論のためのモデルは次のように書ける。 . $$ begin{eqnarray} p( mathcal{D}, x_*, mu) &amp;=&amp; p( mathcal{D}| mu)p(x_*| mu)p( mu) p( mathcal{D}| mu) &amp;=&amp; Pi_{n=1}^{N} Bern(x_n| mu) p(x_*| mu) &amp;=&amp; Bern(x_*| mu) p( mu) &amp;=&amp; Beta( mu|a,b) end{eqnarray} $$&#20107;&#24460;&#20998;&#24067;&#12398;&#25512;&#35542; . 実際に$ mathcal{D}$を観測した後の事後分布$p( mu| mathcal{D})$を求める。 . . Note: モデルの事後分布は$p(x_*, mu| mathcal{D}) = p(x_*| mu)p( mu| mathcal{D})$だがデータからの学習に関わるのは$p( mu| mathcal{D})$の部分のみ。学習のみに推論を絞ってこちらを事後分布と呼ぶ場合も多い。本節でも$p( mu| mathcal{D})$を事後分布と呼ぶ。 . ベイズの定理を用いて、 . $$ begin{eqnarray} p( mu| mathcal{D}) &amp;=&amp; frac{p( mathcal{D}| mu)p( mu)}{p( mathcal{D})} &amp;=&amp; frac{ { Pi_{n=1}^{N}p(x_n| mu) }p( mu)}{p( mathcal{D})} &amp; propto&amp; { Pi_{n=1}^{N}p(x_n| mu) }p( mu) end{eqnarray} $$である。分母は正規化されていることを保証する項であり、分布形状を決めるのは分子の部分であるため3行目では省略している。ベルヌーイ分布もベータ分布も指数部分があり、対数をとると計算が楽になる。 . $$ begin{eqnarray} ln p( mu| mathcal{D}) &amp;=&amp; Sigma_{n=1}^{N} ln p(x_n| mu) + ln p( mu) + const.　(対数化により分母は定数項に) &amp;=&amp; Sigma_{n=1}^{N} ln( mu^{x_n} (1- mu)^{1-x_n}) + ln(C_B(a,b) mu^{a-1} (1- mu)^{b-1}) + const.　(ベルヌーイ分布, ベータ分布の式を代入) &amp;=&amp; Sigma_{n=1}^{N} x_n ln mu + Sigma_{n=1}^{N} (1-x_n) ln (1- mu) + (a-1) ln mu + (b-1) ln (1- mu) + const.　(C_B(a,b)は対数化によりconst.に吸収) &amp;=&amp; ( Sigma_{n=1}^{N} x_n + a - 1) ln mu + (N - Sigma_{n=1}^{N} x_n + b - 1) ln (1- mu) + const. end{eqnarray} $$対数を元に戻すと . $$ p( mu| mathcal{D}) propto mu^{( Sigma_{n=1}^{N} x_n + a - 1)} (1- mu)^{N - Sigma_{n=1}^{N} x_n + b - 1} $$でありこれはベータ分布の形である。なお定数項は正規化されることを保証する係数となっている。つまり . $$ begin{eqnarray} p( mu| mathcal{D}) &amp;=&amp; Beta( mu| hat{a}, hat{b}) ただし　 hat{a} &amp;=&amp; Sigma_{n=1}^{N} x_n + a hat{b} &amp;=&amp; N - Sigma_{n=1}^{N} x_n + b end{eqnarray} $$となる。 . . Note: このように、特定の確率分布のパラメータの事前分布とすることで、事後分布が事前分布と同じ形になる確率分布を共役事前分布という。ベルヌーイ分布の共役事前分布はベータ分布である。 . . Warning: 共役事前分布を用いることは必須ではない。 . . Note: $N$はデータ点の個数、$ Sigma_{n=1}^{N} x_n$は値が1だったデータ点の個数である。ハイパーパラメータ$a,b$をデータの情報で更新しているという見方ができる。また、$N$が大きくなると、$a,b$が無視できる、すなわちハイパーパラメータが結果に影響しなくなることがわかる。 . &#20104;&#28204;&#20998;&#24067;&#12398;&#31639;&#20986; . 未知のデータ点$x_*$の予測分布$p(x_*| mathcal{D})$は$p(x_*, mu| mathcal{D}) = p(x_*| mu)p( mu| mathcal{D})$をパラメータ$ mu$について周辺化することで求まる。 . $$ begin{eqnarray} p(x_*| mathcal{D}) &amp;=&amp; int p(x_*| mu)p( mu| mathcal{D}) d mu &amp;=&amp; int Bern(x_*| mu) Beta( mu| hat{a}, hat{b}) d mu &amp;=&amp; C_B( hat{a}, hat{b}) int mu^{x_*} (1- mu)^{1-x_*} mu^{ hat{a}-1}(1- mu)^{ hat{b}-1}d mu &amp;=&amp; C_B( hat{a}, hat{b}) int mu^{x_* + hat{a} -1}(1- mu)^{1-x_*+ hat{b}-1}d mu end{eqnarray} $$ここでベータ分布の定義式から . $$ int mu^{x_* + hat{a} -1}(1- mu)^{1-x_*+ hat{b}-1}d mu = frac{1}{C_B(x_* + hat{a}, 1-x_* + hat{b})} $$となる。 . . Note: ベータ分布は確率分布なので積分した時1になる。つまり係数$C_B$以外の部分を積分した時の値は係数$C_B$の逆数である。$ int mu^{x_* + hat{a} -1}(1- mu)^{1-x_*+ hat{b}-1}d mu$はベータ分布の積分から係数$C_B$の部分を除いた形になっている。 . したがって、 . $$ begin{eqnarray} p(x_*| mathcal{D}) &amp;=&amp; frac{C_B( hat{a}, hat{b})}{C_B(x_* + hat{a}, 1-x_* + hat{b})} &amp;=&amp; frac{ Gamma( hat{a}+ hat{b}) Gamma(x_* + hat{a}) Gamma(1-x_* + hat{b})}{ Gamma( hat{a}) Gamma( hat{b}) Gamma( hat{a}+ hat{b}+1)} end{eqnarray} $$複雑な式になっているが$x_*$は0か1しかとり得ないことを利用するともっと単純に書ける。 . $$ begin{eqnarray} p(x_* = 1| mathcal{D}) &amp;=&amp; frac{ Gamma( hat{a}+ hat{b}) Gamma(1 + hat{a}) Gamma( hat{b})}{ Gamma( hat{a}) Gamma( hat{b}) Gamma( hat{a}+ hat{b}+1)} &amp;=&amp; frac{ Gamma( hat{a}+ hat{b}) hat{a} Gamma( hat{a}) Gamma( hat{b})}{ Gamma( hat{a}) Gamma( hat{b})( hat{a}+ hat{b}) Gamma( hat{a}+ hat{b})} &amp;=&amp; frac{ hat{a}}{ hat{a}+ hat{b}} p(x_* = 0| mathcal{D}) &amp;=&amp; frac{ Gamma( hat{a}+ hat{b}) Gamma( hat{a}) Gamma(1 + hat{b})}{ Gamma( hat{a}) Gamma( hat{b}) Gamma( hat{a}+ hat{b}+1)} &amp;=&amp; frac{ hat{b}}{ hat{a}+ hat{b}} end{eqnarray} $$より . $$ begin{eqnarray} p(x_*| mathcal{D}) &amp;=&amp; ( frac{ hat{a}}{ hat{a}+ hat{b}})^{x_*} ( frac{ hat{b}}{ hat{a}+ hat{b}})^{1-x_*} &amp;=&amp; ( frac{ hat{a}}{ hat{a}+ hat{b}})^{x_*} (1- frac{ hat{a}}{ hat{a}+ hat{b}})^{1-x_*} &amp;=&amp; Bern(x_*| frac{ hat{a}}{ hat{a}+ hat{b}}) &amp;=&amp; Bern(x_*| frac{ Sigma_{n=1}^{N}x_n + a}{N+a+b}) end{eqnarray} $$と予測分布はベルヌーイ分布の形で書ける。 . . Note: 予測分布についても、$N$が大きくなると、$a,b$が無視できる、すなわちハイパーパラメータが結果に影響しなくなることがわかる。また予測分布の形状が尤度関数と変わっておらず、$ mu$の点推定を行った場合の予測と結局同じことをやっているように見える(特にNが大きければ最尤推定と同じである)が、尤度関数の種類によっては予測分布の形と異なる場合がある。ポアソン分布→負の二項分布、精度未知の1次元ガウス分布→Studentのt分布などの例がある。 . 1. 『ベイズ推論による機械学習入門』(須山敦志、講談社)↩ .",
            "url": "https://vintea01.github.io/tpt-medical-it/bayes/2020/03/29/bayes_part2.html",
            "relUrl": "/bayes/2020/03/29/bayes_part2.html",
            "date": " • Mar 29, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "とりあえずテストしてみるよー。",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . VERSION . v&#34;1.4.0&#34; . println(&quot;hello world&quot;) . hello world . π . π = 3.1415926535897... . a = 1.1 a += 0.1 a .",
            "url": "https://vintea01.github.io/tpt-medical-it/jupyter/2020/03/27/testjulia.html",
            "relUrl": "/jupyter/2020/03/27/testjulia.html",
            "date": " • Mar 27, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "自分のサイトを作ろう",
            "content": "概要 . 公式のドキュメントにしたがって作成したデフォルトのサイトを自分のサイトにするための設定項目。 . 変更するファイル . _config.yml | _pages/about.md | images/favicon.ico | . _config.yml . サイト名などの主要な設定項目は_config.ymlに含まれている。変更するのは以下の要素。 . title . サイト名になる。 . description . サイトの概要。ブラウザのタブにtitleともに表示される。 . minima: social_links: . GitHubとTwitterアカウント。 . use_math . TeX記法を使う場合はtrueにしておく。 . show_description . ホーム画面に各記事の概要を表示する。デフォルトでfalse。 . default_badges . 記事にGitHubやBinder, Colabへのリンクバッジが貼られる。使わないならfalseにする。 . _pages/about.md . 自己紹介や団体紹介を書いておく。 . images/favicon.ico . ブラウザのタブに表示されるマーク。団体ロゴなどの画像ファイルの名前をfavicon.icoにすればいい。 .",
            "url": "https://vintea01.github.io/tpt-medical-it/markdown/2020/03/27/fastpages.html",
            "relUrl": "/markdown/2020/03/27/fastpages.html",
            "date": " • Mar 27, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "ベイズ勉強会 Part 1 ベイズ推論のワークフロー",
            "content": "参考図書 1 . &#27010;&#35542;: &#12505;&#12452;&#12474;&#25512;&#35542;&#12398;&#12527;&#12540;&#12463;&#12501;&#12525;&#12540; . . Important: ベイズ推論の共通するワークフロー . 観測データ$ mathcal{D}$と観測されていない未知の変数$ mathbf{X}$の同時分布$p( mathcal{D}, mathbf{X})$を構築 | 事後分布$p( mathbf{X}| mathcal{D}) = frac{p( mathcal{D}, mathbf{X})}{p( mathcal{D})}$を求める。 | 今回はさらに事後分布を用いて予測分布を計算するところまでを見る。 . &#20104;&#28204;&#20998;&#24067; . 観測されたデータ$ mathcal{D}$に対して、パラメタ$ theta$を持つ確率分布でモデルを組み、新しいデータ$x_*$を予測したい。$ mathcal{D}$と$x_*$が独立に生成されるとすると、以下のような予測分布を用いることができる。 . $$p(x_*| mathcal{D}) = int p(x_*| theta)p( theta| mathcal{D}) d theta$$ . $ mathcal{D}$, $ theta$, $x_*$の関係をDAGで表すと次のようになる。 . . この時、$ mathcal{D}$と$x_*$はパラメタ$ theta$が与えられた条件の下での条件付き独立である。 . &#21516;&#26178;&#20998;&#24067;&#12398;&#35352;&#36848; . $ mathcal{D}$と$x_*$がパラメタ$ theta$が与えられた条件の下での条件付き独立であることから同時分布は以下のようになる。 $$ p( mathcal{D}, x_*, theta) = p( mathcal{D}| theta)p(x_*| theta)p( theta) $$ . . Note: $p( theta)$は2個必要なのではないかと思うかもしれない。サイコロの目によって動きが決まる駒が2つあり、同時に動かす状況を考えよう。コマの動きを決めるのにサイコロを振る回数は1回である。 . . Note: $p( mathcal{D}| theta)$の部分はパラメタからデータが生成される過程を記述している。これを$ theta$の関数として見た場合尤度関数と呼ぶ。この尤度関数を最大化する$ theta$を$ theta$の予測値とする方法を最尤推定という。 . . Note: $p( theta)$を事前分布という。同時確率は尤度関数×事前分布の形で書くことができる。 . &#20107;&#24460;&#20998;&#24067;&#12398;&#25512;&#35542; . データ$ mathcal{D}$だけが手元にある時、残りの変数の事後分布は $$ begin{eqnarray} p(x_*, theta| mathcal{D}) &amp;=&amp; frac{p( mathcal{D}, x_*, theta)}{p( mathcal{D})} &amp;=&amp; frac{p( mathcal{D}| theta)p(x_*| theta)p( theta)}{p( mathcal{D})} &amp;=&amp; p(x_*| theta)p( theta| mathcal{D}) end{eqnarray} $$ となる。 . . Note: ベイズの定理から$p( theta| mathcal{D}) = frac{p( mathcal{D}| theta)p( theta)}{p( mathcal{D})}$となることを用いた。 . . Note: $p( theta| mathcal{D})$を最大化する$ theta$を$ theta$の予測値とする方法を事後確率最大化推定(MAP推定)と呼ぶ。 . &#20104;&#28204;&#20998;&#24067;&#12398;&#31639;&#20986; . $ mathcal{D}$が決まった時の$x_*$の確率分布、すなわち予測分布$p(x_*| mathcal{D})$は$ theta$を積分除去することで得られる。 . $$p(x_*| mathcal{D}) = int p(x_*| theta)p( theta| mathcal{D}) d theta$$ . 以上がベイズ推論の予測までを含めた一連の流れである。次回から離散確率分布について具体的にやってみる。 . 1. 『ベイズ推論による機械学習入門』(須山敦志、講談社)↩ .",
            "url": "https://vintea01.github.io/tpt-medical-it/bayes/2020/03/27/bayes_part1.html",
            "relUrl": "/bayes/2020/03/27/bayes_part1.html",
            "date": " • Mar 27, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://vintea01.github.io/tpt-medical-it/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://vintea01.github.io/tpt-medical-it/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "T/Tは東京医科歯科大学の医学生で結成されたデータサイエンスサークルです。 .",
          "url": "https://vintea01.github.io/tpt-medical-it/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}